{"version":3,"sources":["components/Forecast/Weather/Weather.module.css","components/OtherCities/Components/City/City.module.css","components/Current/Components/Meta/Meta.module.css","components/Forecast/Forecast.module.css","components/Search/Search.module.css","components/OtherCities/OtherCities.module.css","components/Current/Current.module.css","App.module.css","components/Temperature/Temperature.js","components/Current/Components/Meta/Meta.js","utils/OpenWeatherMap/OpenWeatherMap.js","apis/getCurrentWeather/getCurrentWeather.js","components/Current/Current.js","components/Forecast/Weather/Weather.js","apis/getForecast/getForecast.js","components/Forecast/Forecast.js","components/Search/Search.js","components/OtherCities/Components/City/City.js","apis/getWeathers/getWeathers.js","components/OtherCities/OtherCities.js","apis/getSearchWeather/getSearchWeather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Temperature","children","className","styles","temperature","Meta","title","value","meta","getWeather","url","params","axios","get","appid","process","units","lat","lon","Current","coords","useState","data","setData","loading","setLoading","useEffect","a","getCurrentWeather","console","log","getCurrent","current","left","weatherDisplay","main","temp","weather","location","name","sys","country","metas","humidity","divider","wind","speed","Weather","day","description","icon","src","alt","exclude","Forecast","getForecast","getCurrentForecast","forecast","header","weathers","daily","map","item","Date","dt","toLocaleString","weekday","Math","floor","Search","props","changeLocationHandler","e","setState","inputLocation","target","changeWeatherHandler","preventDefault","changeCoords","state","search","onSubmit","this","locationInput","placeholder","onChange","Component","City","city","id","CITIES","OtherCities","getWeathers","ids","join","otherCities","cities","list","key","parseInt","q","App","getSearchWeather","coord","getPosition","navigator","geolocation","getCurrentPosition","position","myCoords","latitude","longitude","app","top","bottom","parallel","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dd58d44c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__3mmW1\",\"day\":\"Weather_day__3EI6h\",\"temperature\":\"Weather_temperature__2N3mv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"city\":\"City_city__1zFR_\",\"name\":\"City_name__gUISP\",\"temperature\":\"City_temperature__2Es1a\",\"weather\":\"City_weather__3bQ4m\",\"description\":\"City_description__Fe2HQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"Meta_meta__2q9Z2\",\"title\":\"Meta_title__2TPDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast\":\"Forecast_forecast__3_gmE\",\"container\":\"Forecast_container__RgwK9\",\"weathers\":\"Forecast_weathers__15OQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3OUtB\",\"location\":\"Search_location__3-4p6\",\"locationInput\":\"Search_locationInput__pblER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"otherCities\":\"OtherCities_otherCities__jnC3A\",\"cities\":\"OtherCities_cities__3xahJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"current\":\"Current_current__2bCtp\",\"left\":\"Current_left__3KflQ\",\"right\":\"Current_right__3aLAj\",\"bottom\":\"Current_bottom__1ZcpP\",\"temperature\":\"Current_temperature__3INBI\",\"weather\":\"Current_weather__IJi8t\",\"metas\":\"Current_metas__3u91J\",\"humidity\":\"Current_humidity__nzLzK\",\"wind\":\"Current_wind__354z-\",\"location\":\"Current_location__1OEQx\",\"divider\":\"Current_divider__1C6Um\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"top\":\"App_top__PWklc\",\"weather\":\"App_weather__2omPa\",\"bottom\":\"App_bottom__2k0cJ\",\"divider\":\"App_divider__1so9q\",\"parallel\":\"App_parallel__1ph2E\"};","import React from 'react';\nimport styles from './Temperature.module.css';\n\nconst Temperature = ({ children }) => (\n  <span className={styles.temperature}>\n    <span>{children}</span>\n    <span>&nbsp;</span>\n    <span>&deg;</span>\n  </span>\n);\n\nexport default Temperature;\n","import React from 'react';\nimport styles from './Meta.module.css';\n\nconst Meta = ({ title, value }) => (\n  <div className={styles.meta}>\n    <div className={styles.title}>{title}</div>\n    <div className={styles.value}>{value}</div>\n  </div>\n);\n\nexport default Meta;\n","import axios from 'axios';\n\nconst baseURL = 'http://api.openweathermap.org/data/2.5';\n\n// const appid = process.env.APP_ID;\n\nconst getWeather = (url, params) =>\n  axios.get(`${baseURL}${url}`, {\n    params: {\n      ...params,\n      appid: process.env.REACT_APP_API_KEY,\n      units: 'metric',\n    },\n  });\n\nexport default getWeather;\n","import getWeather from '../../utils/OpenWeatherMap';\n\nexport default (lat, lon) =>\n  getWeather('/weather', {\n    lat,\n    lon,\n  });\n","import React, { useEffect, Fragment, useState } from 'react';\nimport styles from './Current.module.css';\nimport Temperature from '../Temperature';\nimport Meta from './Components/Meta';\n\nimport getCurrentWeather from '../../apis/getCurrentWeather';\n\nconst Current = ({ coords }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getCurrent = async () => {\n      const lon = coords.lon;\n      const lat = coords.lat;\n\n      const { data } = await getCurrentWeather(lat, lon);\n\n      console.log(lon);\n      setData(data);\n      setLoading(false);\n    };\n    getCurrent();\n  }, [coords]);\n\n  return (\n    <div className={styles.current}>\n      {loading ? (\n        <div className={styles.loading}>Loading...</div>\n      ) : (\n        <Fragment>\n          <div className={styles.left}>\n            <div className={styles.weatherDisplay}>\n              <div className={styles.temperature}>\n                <Temperature>{data.main.temp}</Temperature>\n                <div className={styles.weather}>{data.weather[0].main}</div>\n              </div>\n              <div className={styles.location}>\n                {data.name}\n                {', '}\n                {data.sys.country}\n              </div>\n              <div className={styles.metas}>\n                <div className={styles.humidity}>\n                  <Meta\n                    title='HUMIDITY'\n                    value={`${data.main.humidity}%`}\n                  ></Meta>\n                </div>\n                <div className={styles.divider}></div>\n                <div className={styles.wind}>\n                  <Meta title='WIND' value={`${data.wind.speed}k/m`}></Meta>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Current;\n","import React from 'react';\nimport styles from './Weather.module.css';\nimport Temperature from '../../Temperature';\n\nconst Weather = ({ day, temperature, weather }) => {\n  return (\n    <div className={styles.weather}>\n      <h3 className={styles.day}>{day}</h3>\n      <p className={styles.temperature}>{weather.description}</p>\n      <img\n        className={styles.icon}\n        src={`http://openweathermap.org/img/wn/${weather.icon}@2x.png`}\n        alt={weather.description}\n      />\n      <div className={styles.temperature}>\n        <Temperature>{temperature}</Temperature>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n","import getWeather from '../../utils/OpenWeatherMap';\n\nexport default (lat, lon, exclude) =>\n  getWeather('/onecall', {\n    lat,\n    lon,\n    exclude,\n  });\n","import React, { useState, useEffect } from 'react';\nimport styles from './Forecast.module.css';\nimport Weather from '../Forecast/Weather';\nimport getForecast from '../../apis/getForecast';\n\nconst Forecast = ({ coords }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getCurrentForecast = async () => {\n      const lat = coords.lat;\n      const lon = coords.lon;\n      const exclude = 'minutely,hourly';\n\n      console.log(lat);\n\n      const { data } = await getForecast(lat, lon, exclude);\n      console.log(data);\n      setData(data);\n      setLoading(false);\n    };\n    getCurrentForecast();\n  }, [coords]);\n\n  return (\n    <div className={styles.forecast}>\n      <h3 className={styles.header}>Forecast</h3>\n\n      <div className={styles.weathers}>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          data.daily.map((item) => (\n            <Weather\n              day={new Date(item.dt * 1000).toLocaleString('en-US', {\n                weekday: 'short',\n              })}\n              temperature={Math.floor(item.temp.day)}\n              weather={{\n                icon: item.weather[0].icon,\n                description: item.weather[0].main,\n              }}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import React, { Component } from 'react';\nimport styles from './Search.module.css';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputLocation: '',\n    };\n  }\n  changeLocationHandler = (e) => {\n    this.setState({ inputLocation: e.target.value });\n  };\n\n  changeWeatherHandler = (e) => {\n    e.preventDefault();\n\n    this.props.changeCoords(this.state.inputLocation);\n\n    this.setState({ inputLocation: '' });\n  };\n\n  render() {\n    return (\n      <div className={styles.search}>\n        <form className={styles.location} onSubmit={this.changeWeatherHandler}>\n          <i className='fas fa-search'></i>\n          <input\n            className={styles.locationInput}\n            placeholder='Enter Location...'\n            value={this.state.inputLocation}\n            onChange={this.changeLocationHandler}\n          />\n        </form>\n      </div>\n    );\n  }\n}\nexport default Search;\n","import React from 'react';\nimport styles from './City.module.css';\nimport Temperature from '../../../Temperature';\n\nconst City = ({ name, temperature, weather }) => {\n  // const name = city.name;\n  // const temperature = parseInt(city.main.temp);\n  // const weather = city.weather[0];\n\n  return (\n    <div className={styles.city}>\n      <h3 className={styles.name}>{name}</h3>\n      <div className={styles.temperature}>\n        <Temperature>{temperature}</Temperature>\n      </div>\n      <img\n        className={styles.weather}\n        src={`http://openweathermap.org/img/wn/${weather.icon}.png`}\n        alt={weather.description}\n      />\n      <div className={styles.description}>{weather.description}</div>\n    </div>\n  );\n};\n\nexport default City;\n","import getWeather from '../../utils/OpenWeatherMap';\n\nexport default (id) =>\n  getWeather('/group', {\n    id,\n  });\n","import React, { Component } from 'react';\nimport styles from './OtherCities.module.css';\nimport City from './Components/City';\n\nimport getWeathers from '../../apis/getWeathers';\n\nexport const CITIES = [\n  {\n    name: 'Sydney',\n    id: '2147714',\n  },\n  {\n    name: 'Melbourne',\n    id: '4163971',\n  },\n  {\n    name: 'Brisbane',\n    id: '2174003',\n  },\n  {\n    name: 'Perth',\n    id: '2063523',\n  },\n];\n\nclass OtherCities extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getWeathers();\n  }\n\n  async getWeathers() {\n    const ids = CITIES.map((city) => city.id);\n    const id = ids.join(',');\n\n    const { data } = await getWeathers(id);\n    this.setState({ data: data, loading: false });\n  }\n\n  render() {\n    const { data, loading } = this.state;\n    console.log(data);\n    return (\n      <div className={styles.otherCities}>\n        <h3 className={styles.title}>Other Cities</h3>\n\n        {loading ? (\n          <div>loading...</div>\n        ) : (\n          <div className={styles.cities}>\n            {data.list.map((item) => (\n              <City\n                key={item.id}\n                // city={item}\n                name={item.name}\n                temperature={parseInt(item.main.temp)}\n                weather={{\n                  icon: item.weather[0].icon,\n                  description: item.weather[0].main,\n                }}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default OtherCities;\n","import getWeather from '../../utils/OpenWeatherMap';\n\nexport default (q) =>\n  getWeather('/weather', {\n    q,\n  });\n","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport Current from './components/Current';\nimport Forecast from './components/Forecast';\nimport Search from './components/Search';\nimport OtherCities from './components/OtherCities';\n\nimport getSearchWeather from './apis/getSearchWeather';\n\nclass App extends Component {\n  state = {\n    coords: {\n      lon: 0,\n      lat: 0,\n    },\n  };\n\n  componentDidMount() {\n    this.getPosition();\n  }\n\n  getPosition() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        let myCoords = {\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        };\n\n        this.setState({ coords: myCoords });\n        console.log(this.state.coords);\n      });\n    } else {\n      console.log('nah');\n    }\n  }\n\n  changeCoords = async (q) => {\n    console.log('change coords');\n    try {\n      const { data } = await getSearchWeather(q);\n      const { coord } = data;\n      console.log(coord);\n      this.setState({ coords: coord });\n      console.log(this.state.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <div className={styles.weather}>\n          <div className={styles.top}>\n            <Current coords={this.state.coords} />\n            <Search\n              changeCoords={this.changeCoords}\n              // changeForecast={this.changeForecast}\n            />\n          </div>\n          <div className={styles.bottom}>\n            <Forecast coords={this.state.coords} />\n            <div className={styles.divider}></div>\n            <div className={styles.parallel}></div>\n\n            <OtherCities />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}